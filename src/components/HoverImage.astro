---
const { staticSrc, videoSrc, link, alt, width, height, customStyle, hoverText } = Astro.props;
---

<a href={link} class="hover-video-link" style={customStyle}>
  <img 
    src={staticSrc} 
    alt={alt} 
    class="hover-video-placeholder" 
    style={`width: ${width}; height: ${height};`} />
  <video 
    class="hover-video" 
    src={videoSrc} 
    muted 
    loop 
    playsinline
    style={`width: ${width}; height: ${height}; display: none;`} />
  <div class="hover-text" style={`width: ${width}; height: ${height};`}>
    {hoverText}
  </div>
</a>

<style>
  .hover-video-link {
    display: inline-block;
    text-decoration: none;
    position: relative; /* Required for absolute positioning of child elements */
  }

  .hover-video-placeholder {
    transition: all 0.3s ease;
    border-radius: 8px; /* Optional: rounded corners */
    object-fit: contain; /* Maintain aspect ratio */
  }

  /* Hide the video by default */
  .hover-video {
    display: none; /* Hide video by default */
    position: absolute; /* Position video above the image */
    top: 0; /* Align video with the placeholder */
    left: 0; /* Align video with the placeholder */
    border-radius: 8px; /* Match rounded corners */
    object-fit: contain; /* Maintain aspect ratio */
  }

  /* Show the video on hover */
  .hover-video-link:hover .hover-video {
    display: block; /* Show video on hover */
  }

  /* Hide the image when video is shown */
  .hover-video-link:hover .hover-video-placeholder {
    display: none; /* Hide the placeholder image on hover */
  }

  .hover-text {
    display: none; /* Hide text by default */
    position: absolute;
    top: 200%; 
    left: 50%;
    transform: translate(0%, 40%); /* Center the text */
    color: rgba(255, 255, 255, 0.609);
    text-align: center;
    z-index: 2; /* Above the video */
  }

  /* Show the hover text on hover */
  .hover-video-link:hover .hover-text {
    display: block;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const hoverLinks = document.querySelectorAll('.hover-video-link');

    hoverLinks.forEach(link => {
      const video = link.querySelector('.hover-video');

      // Play video on hover
      link.addEventListener('mouseover', () => {
        video.style.display = 'block'; // Show the video
        video.play(); // Play the video
      });

      // Pause video when mouse leaves
      link.addEventListener('mouseout', () => {
        video.pause(); // Pause the video
        video.currentTime = 0; // Reset video to start
        video.style.display = 'none'; // Hide the video
      });
    });
  });
</script>

